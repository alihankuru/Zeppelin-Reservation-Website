@model ZeppelinWebsite.ViewModel.BookingViewModel
@{
    ViewBag.Title = "Index";
}

<h2>My Flight</h2>



<html>
<head>

    <script src="~/Scripts/jquery-3.6.0.min.js"></script>


    @section scripts{


        <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
        <script src="~/Scripts/jquery-ui-1.13.0.min.js"></script>

        <script>

            $(function () {

                $('.datepicker').datepicker({
                    dateFormat: 'dd-M-yy',
                    changeMonth: true,
                    changeYear: true,
                    showOn: 'button',
                    sideBySide: true,
                    contentType: 'select',
                    buttonIcon: '<span class="glyphicon glyphicon-calendar"></span>',
                    minDate: new Date()


                });

                //$("#txtBookingFrom").change(function () {

                //    var date2 = $("#txtBookingFrom").datepicker('getDate', '+1d');
                //    date2.setDate(date2.getDate() + 1);

                //    $("#txtBookingTo").val().datepicker('option', 'minDate', date2);
                //    $("#txtBookingTo").datepicker('setDate', date2);
                //});

            });


        </script>


    }

    <script type="text/javascript">

        $(document).ready(function () {

            $("#btnSave").click(function () {
                if (!$("#formCustomerBooking").valid()) {
                    return;
                }

                AddCustomerBooking();

            });

            LoadBookingHistory();
            LLoadZeppelinDetails();
        });


        function LoadBookingHistory() {
            $.ajax({
                async: true,
                type: 'GET',
                dataType: 'HTML',
                contentType: false,
                processType: false,
                url: '/MyFlight/GetAllBookingHistory',
                success: function (data) {
                    $("#divBookingHistory").html(data);
                },
                error: function () {
                    alert('There is some problem to process your request');
                }



            });


        }

        function LLoadZeppelinDetails() {
            //$("divLoadZeppelinDetails")


            $.ajax({
                async: true,
                data: 'GET',
                dataType: 'HTML',
                contentType: false,
                processData: false,
                url: '/Booking/GetAllZeppelin',
                success: function (data) {
                    $("#divLoadZeppelinDetails").html(data);
                },
                error: function () {

                    alert('There is a problem in loadZeppelinDetails');
                }
            });
        }



        function ResetBooking() {

            $("#txtCustomerName").val('');
            $("#txtCustomerAddress").val('');
            $("#txtCustomerPhone").val('');
            $("#ddAssignZeppelin").val(1);
            $("#txtNumberOfMembers").val('');
            $("#txtCustomerName").focus();
        }



        function AddCustomerBooking() {
            var objBookingViewModel = {};
            objBookingViewModel.CustomerName = $("#txtCustomerName").val();
            objBookingViewModel.CustomerAddress = $("#txtCustomerAddress").val();
            objBookingViewModel.CustomerPhone = $("#txtCustomerPhone").val();
            objBookingViewModel.BookingFrom = $("#txtBookingFrom").val();

            objBookingViewModel.AssignZeppelinId = $("#ddAssignZeppelin").val();
            objBookingViewModel.NumberOfMembers = $("#txtNumberOfMembers").val();


            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                url: '/Booking/Index',
                data: JSON.stringify(objBookingViewModel),
                success: function (data) {
                    if (data.success === true) {
                        alert(data.message);
                        ResetBooking();
                        LoadBookingHistory();
                    }

                },
                error: function () {
                    alert("There is a problem AddCustomerBooking.");
                }

            })
        }


    </script>
</head>
<body  style="background-color:#cce6f9;">

    @*<div style="margin-top: 50px">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divNewBooking" data-backdrop="static" data-keyboard="false">New Booking</button>


    </div>*@



    <div id="divNewBooking" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                @*<div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title">New Booking</h4>
                </div>*@
                <div class="modal-body">

                    <form id="formCustomerBooking">


                        <div class="container col-md-10">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(expression: model => model.CustomerName, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(expression: Model => Model.CustomerName, htmlAttributes: new { @class = "form-control", @id = "txtCustomerName" })
                                    @Html.ValidationMessageFor(expression: model => model.CustomerName, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(expression: model => model.CustomerAddress, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(expression: Model => Model.CustomerAddress, htmlAttributes: new { @class = "form-control", @id = "txtCustomerAddress" })
                                    @Html.ValidationMessageFor(expression: model => model.CustomerAddress, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(expression: model => model.CustomerPhone, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(expression: Model => Model.CustomerPhone, htmlAttributes: new { @class = "form-control", @id = "txtCustomerPhone" })
                                    @Html.ValidationMessageFor(expression: model => model.CustomerPhone, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(expression: model => model.BookingFrom, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.BookingFrom, new { htmlAttributes = new { @readonly = "true", value = Model.BookingFrom.ToString(format: "dd-MMM-yyyy"), @class = "form-control datepicker", @id = "txtBookingFrom" } })
                                    @Html.ValidationMessageFor(expression: model => model.BookingFrom, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="row">
                                @*<div class="form-group col-md-6">
                                        @Html.LabelFor(expression: model => model.BookingTo, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.BookingTo, additionalViewData: new { htmlAttributes = new { @readonly = "true", Value = Model.BookingTo.ToString(format: "dd-MMM-yyyy"), @class = "form-control datepicker", @id = "txtBookingTo" } })
                                        @Html.ValidationMessageFor(expression: model => model.BookingTo, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                    </div>*@
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(expression: model => model.AssignZeppelinId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.AssignZeppelinId, Model.ListOfZeppelins, htmlAttributes: new { @class = "form-control", @id = "ddAssignZeppelin" })
                                    @Html.ValidationMessageFor(expression: model => model.AssignZeppelinId, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(expression: model => model.NumberOfMembers, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(expression: Model => Model.NumberOfMembers, htmlAttributes: new { @class = "form-control", @id = "txtNumberOfMembers" })
                                    @Html.ValidationMessageFor(expression: model => model.NumberOfMembers, validationMessage: null, htmlAttributes: new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">

                                </div>

                            </div>

                        </div>

                    </form>


                </div>
                <div class="modal-footer">
                    <button id="btnSave" type="button" class="btn btn-success">Save</button> &nbsp;
                    <button type="button" data-dismiss="modal" class="btn btn-danger">Close</button> &nbsp;
                </div>


            </div>

        </div>

    </div>
    <div style="margin-top: 20px"></div>

        <div id="divBookingHistory"></div>
    @*<div style="margin-top: 20px"></div>
    <div id="divLoadZeppelinDetails">


    </div>*@


</body>
</html>